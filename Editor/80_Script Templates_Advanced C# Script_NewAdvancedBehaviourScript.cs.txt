/* Created by Pixel.Lifetime */

using System;
using System.IO;
using System.Collections;
using System.Collections.Generic;

using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Events;
using UnityEngine.UIElements;

using Object = UnityEngine.Object;

#if UNITY_EDITOR
using UnityEditor;
#endif

using Random = PixLi.RandomDistribution.Random;

namespace PixLi
{
	public class #SCRIPTNAME# : MonoBehaviour
	{
#if UNITY_EDITOR
		[
			CustomEditor(
				inspectedType: typeof(#SCRIPTNAME#),
				editorForChildClasses: true
			),
			CanEditMultipleObjects
		]
		public class #SCRIPTNAME#Editor : Editor
		{
			private #SCRIPTNAME# _t#SCRIPTNAME#;

			private VisualElement _root;
			private VisualTreeAsset _visualTree;

			private const string EDITOR_TEMPLATE_FILE_NAME = "#SCRIPTNAME#EditorTemplate.uxml";
			private const string EDITOR_STYLES_FILE_NAME = "#SCRIPTNAME#EditorStyles.uss";

			public override VisualElement CreateInspectorGUI()
			{
				this._root.Clear();

				this._root.Add(
					new IMGUIContainer(() =>
					{
						using (EditorGUI.ChangeCheckScope changeCheckScope = new EditorGUI.ChangeCheckScope())
						{
							this.DrawDefaultInspector();

							if (changeCheckScope.changed)
							{
							}
						}
					})
				);

				this._visualTree.CloneTree(this._root);
			
				return this._root;
			}

			public void OnEnable()
			{
				this._t#SCRIPTNAME# = (#SCRIPTNAME#)this.target;

				string editorVisualsDirectoryPath = Path.Combine("Editor", "Visuals");

				string scriptFileDirectoryPath = PathUtility.GetScriptFileDirectoryPath(this._t#SCRIPTNAME#);

				this._root = new VisualElement();

				this._visualTree = AssetDatabase.LoadAssetAtPath<VisualTreeAsset>(
					Path.Combine(
						scriptFileDirectoryPath, 
						editorVisualsDirectoryPath,
						EDITOR_TEMPLATE_FILE_NAME
					)
				);

				StyleSheet styleSheet = AssetDatabase.LoadAssetAtPath<StyleSheet>(
					Path.Combine(
						scriptFileDirectoryPath,
						editorVisualsDirectoryPath,
						EDITOR_STYLES_FILE_NAME
					)
				);
			
				this._root.styleSheets.Add(styleSheet);
			}
		}
#endif
	}
}

namespace PixLi
{
#if UNITY_EDITOR
#endif
}